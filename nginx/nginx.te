# We just add three type of policies (nginx_t, nginx_exec_t, nginx_home_t) initially in nginx, rest will audit as per requirements.
# For nginx_t domain policy, see httpd_t domain policy, rest will be added as attributes. (seinfo -xthttpd_t)
# For nginx_exec_t policy, see httpd_exec_t policy, rest will be added as attributes. (seinfo -xthttpd_exec_t)
# For nginx_log_t policy, see httpd_log_t policy, rest will be added as attributes. (seinfo -xthttpd_log_t)
# To add attribute, call require {}.
# Allow nginx_t domain to access unconfined_r


# TE & Role declaration (*.te)
	
module nginx 1.0;
# Declaration
require {
		attribute kernel_system_state_reader, syslog_client_type, corenet_unlabeled_type, sepgsql_client_type, netlabel_peer_type, daemon, nsswitch_domain, kerberos_keytab_domain, domain, file_type, exec_type, entry_type, non_security_file_type, direct_init_entry, non_auth_file_type, logfile;
		
		role unconfined_r; type unconfined_t;	
		class process transition;
		}
	
## Type Enforcement
# For type domain
type nginx_t;

typeattribute nginx_t kernel_system_state_reader;
typeattribute nginx_t syslog_client_type;
typeattribute nginx_t corenet_unlabeled_type;
typeattribute nginx_t sepgsql_client_type;
typeattribute nginx_t netlabel_peer_type;
typeattribute nginx_t daemon;
typeattribute nginx_t nsswitch_domain;
typeattribute nginx_t kerberos_keytab_domain;
typeattribute nginx_t domain;


# for application executable files	
type nginx_exec_t; 

typeattribute nginx_exec_t file_type;
typeattribute nginx_exec_t exec_type;
typeattribute nginx_exec_t entry_type;
typeattribute nginx_exec_t non_security_file_type;
typeattribute nginx_exec_t direct_init_entry;
typeattribute nginx_exec_t non_auth_file_type;

# For log type
type nginx_log_t;

typeattribute nginx_log_t file_type;
typeattribute nginx_log_t non_security_file_type;
typeattribute nginx_log_t non_auth_file_type;
typeattribute nginx_log_t logfile;

# Role base access control 
# Allow nginx_t domain to access unconfined_r

role unconfined_r types nginx_t;

# Policy for unconfined_t 
# type_transition of source unconfined_t point to nginx_exec_t, process security class with nginx_t
# when unconfined_t run a file nginx_exec_t, process transition from nginx_exec_t to nginx_t.
# Add in require, so it's available. role (unconfined_r; type unconfined_t;) & class (process & transition) # see available classes seinfo -c


type_transition unconfined_t nginx_exec_t:process nginx_t;


