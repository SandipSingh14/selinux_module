module node_server 1.0;
# Declaration
require { 
		attribute node_type, file_type, exec_type, entry_type, non_security_file_type, direct_init_entry, non_auth_file_type, logfile;
		class process transition;
		role unconfined_r; type unconfined_t;
}
	
## Type Enforcement
# For type domain
type node_server_t;

typeattribute node_server_t node_type;



# For files	
type node_server_exec_t; 
typeattribute node_server_exec_t file_type;
typeattribute node_server_exec_t exec_type;
typeattribute node_server_exec_t entry_type;
typeattribute node_server_exec_t non_security_file_type;
typeattribute node_server_exec_t direct_init_entry;
typeattribute node_server_exec_t non_auth_file_type;

# For Logs

type node_server_log_t;

typeattribute node_server_log_t 	 file_type;
typeattribute node_server_log_t      non_security_file_type;
typeattribute node_server_log_t      non_auth_file_type;
typeattribute node_server_log_t      logfile;

	

# Role base access control 
# Allow node_server_t domain to access unconfined_r

role unconfined_r types node_server_t;

# Policy for unconfined_t 
# type_transition of source unconfined_t point to node_server_exec_t, process security class with node_server_t
# when unconfined_t run a file node_server_exec_t, process transition from node_server_exec_t to node_server_t.
# Add in require, so it's available. role (unconfined_r; type unconfined_t;) & class (process & transition) # see available classes seinfo -c


type_transition unconfined_t node_server_exec_t:process node_server_t;



