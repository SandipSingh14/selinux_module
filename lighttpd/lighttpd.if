
## <summary>policy for lighttpd</summary>

########################################
## <summary>
##	Execute TEMPLATE in the lighttpd domin.
## </summary>
## <param name="domain">
## <summary>
##	Domain allowed to transition.
## </summary>
## </param>
#
interface(`lighttpd_domtrans',`
	gen_require(`
		type lighttpd_t, lighttpd_exec_t;
	')

	corecmd_search_bin($1)
	domtrans_pattern($1, lighttpd_exec_t, lighttpd_t)
')
########################################
## <summary>
##	Read lighttpd's log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`lighttpd_read_log',`
	gen_require(`
		type lighttpd_log_t;
	')

	logging_search_logs($1)
	read_files_pattern($1, lighttpd_log_t, lighttpd_log_t)
')

########################################
## <summary>
##	Append to lighttpd log files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`lighttpd_append_log',`
	gen_require(`
		type lighttpd_log_t;
	')

	logging_search_logs($1)
	append_files_pattern($1, lighttpd_log_t, lighttpd_log_t)
')

########################################
## <summary>
##	Manage lighttpd log files
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`lighttpd_manage_log',`
	gen_require(`
		type lighttpd_log_t;
	')

	logging_search_logs($1)
	manage_dirs_pattern($1, lighttpd_log_t, lighttpd_log_t)
	manage_files_pattern($1, lighttpd_log_t, lighttpd_log_t)
	manage_lnk_files_pattern($1, lighttpd_log_t, lighttpd_log_t)
')
########################################
## <summary>
##	Read lighttpd PID files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`lighttpd_read_pid_files',`
	gen_require(`
		type lighttpd_var_run_t;
	')

	files_search_pids($1)
	read_files_pattern($1, lighttpd_var_run_t, lighttpd_var_run_t)
')

########################################
## <summary>
##	Execute lighttpd server in the lighttpd domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
#
interface(`lighttpd_systemctl',`
	gen_require(`
		type lighttpd_t;
		type lighttpd_unit_file_t;
	')

	systemd_exec_systemctl($1)
        systemd_read_fifo_file_passwd_run($1)
	allow $1 lighttpd_unit_file_t:file read_file_perms;
	allow $1 lighttpd_unit_file_t:service manage_service_perms;

	ps_process_pattern($1, lighttpd_t)
')


########################################
## <summary>
##	Execute lighttpd in the lighttpd domain, and
##	allow the specified role the lighttpd domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed to transition
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	The role to be allowed the lighttpd domain.
##	</summary>
## </param>
#
interface(`lighttpd_run',`
	gen_require(`
		type lighttpd_t;
		attribute_role lighttpd_roles;
	')

	lighttpd_domtrans($1)
	roleattribute $2 lighttpd_roles;
')

########################################
## <summary>
##	Role access for lighttpd
## </summary>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
## <param name="domain">
##	<summary>
##	User domain for the role
##	</summary>
## </param>
#
interface(`lighttpd_role',`
	gen_require(`
		type lighttpd_t;
		attribute_role lighttpd_roles;
	')

	roleattribute $1 lighttpd_roles;

	lighttpd_domtrans($2)

	ps_process_pattern($2, lighttpd_t)
	allow $2 lighttpd_t:process { signull signal sigkill };
')

########################################
## <summary>
##	All of the rules required to administrate
##	an lighttpd environment
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`lighttpd_admin',`
	gen_require(`
		type lighttpd_t;
		type lighttpd_log_t;
		type lighttpd_var_run_t;
	type lighttpd_unit_file_t;
	')

	allow $1 lighttpd_t:process { signal_perms };
	ps_process_pattern($1, lighttpd_t)

    tunable_policy(`deny_ptrace',`',`
        allow $1 lighttpd_t:process ptrace;
    ')

	logging_search_logs($1)
	admin_pattern($1, lighttpd_log_t)

	files_search_pids($1)
	admin_pattern($1, lighttpd_var_run_t)

	lighttpd_systemctl($1)
	admin_pattern($1, lighttpd_unit_file_t)
	allow $1 lighttpd_unit_file_t:service all_service_perms;
	optional_policy(`
		systemd_passwd_agent_exec($1)
		systemd_read_fifo_file_passwd_run($1)
	')
')
